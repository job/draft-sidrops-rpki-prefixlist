<?xml version='1.0' encoding='utf-8'?>

<!DOCTYPE rfc [
 <!ENTITY nbsp  "&#160;">
 <!ENTITY zwsp "&#8203;">
 <!ENTITY nbhy "&#8209;">
 <!ENTITY wj   "&#8288;">
]>

<?rfc sortrefs="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude"
     category="std"
     docName="draft-ietf-sidrops-rpki-prefixlist-01"
     ipr="trust200902"
     xml:lang="en"
     sortRefs="true"
     submissionType="IETF"
     consensus="true"
     version="3">

  <front>

    <title abbrev="RPKI PrefixList">
      A profile for RPKI Signed Lists of Prefixes
    </title>

    <seriesInfo name="Internet-Draft" value="draft-ietf-sidrops-rpki-prefixlist-00"/>

    <author fullname="Job Snijders" initials="J." surname="Snijders">
      <organization>Fastly</organization>
      <address>
        <postal>
          <street/>
          <code/>
          <city>Amsterdam</city>
          <country>Netherlands</country>
        </postal>
        <email>job@fastly.com</email>
      </address>
    </author>

    <author fullname="Geoff Huston" initials="G." surname="Huston">
      <organization>APNIC</organization>
      <address>
        <postal>
          <street>6 Cordelia St</street>
          <code>QLD 4101</code>
          <city>South Brisbane</city>
          <country>Australia</country>
        </postal>
        <email>gih@apnic.net</email>
      </address>
    </author>
<!--
    <author fullname="Kotikalapudi Sriram" initials="K." surname="Sriram">
      <organization abbrev="USA NIST" showOnFrontPage="true">USA National Institute of Standards and Technology</organization>
      <address>
        <postal>
          <street>100 Bureau Drive</street>
          <city>Gaithersburg</city>
          <region>MD</region>
          <code>20899</code>
          <country>United States of America</country>
        </postal>
        <email>ksriram@nist.gov</email>
      </address>
    </author>
-->

    <date />

    <area>ops</area>
    <workgroup>sidrops</workgroup>

    <keyword>security</keyword>
    <keyword>cryptography</keyword>
    <keyword>X.509</keyword>

    <abstract>

      <t>
         This document defines a "RPKI Prefix List", a Cryptographic Message Syntax (CMS) protected content type for use with the Resource Public Key Infrastructure (RPKI) to carry the complete list of prefixes which an Autonomous System (AS) may originate to all or any of its routing peers.
         The validation of a RPKI Prefix List confirms that the holder of the listed ASN produced the object, and that this list is a current, accurate and complete description of address prefixes that may be announced into the routing system originated by this AS.
      </t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro">
      <name>Introduction</name>
      <t>
        This document defines an "RPKI Prefix List", a Cryptographic Message Syntax (CMS) <xref target="RFC5652"/> <xref target="RFC6268"/> protected content type to carry a list of IP prefixes and an Autonomous System Number.
        The list of prefixes describes the maximal set of prefixes that the Autonomous System MAY announce to any of its routing peers.
        The content is signed by the holder of the RPKI private key associated with the listed ASN.
      </t>
      <t>
        RPKI Prefix Lists allow other RPKI-validating remote routing entities to audit the collection of announcements that have the subject ASN as the originating AS.
        Any prefixes originated by this AS not contained in a validated RPKI Prefix List SHOULD be regarded as invalid, but ultimately their consequent handling by the local routing entity that performed the audit function is a matter of local policy.
      </t>
      <t>
        The intent of this object is to offer a RPKI-based successor to the <xref target="RFC2622"/> 'route-set' class objects used in Internet Routing Registries (IRRs).
        The semantics of the route-set and the RPKI Prefix List are similar.
        The difference is that the RPKI signature allows a relying party (RP) of be assured of the currency and authenticity of the Prefix List as a complete enumeration of all prefixes that may be announced as originating by this AS if the object can be validated by the RPKI.
      </t>

      <section anchor="requirements">
        <name>Requirements Language</name>
        <t>
          The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>", "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as described in BCP&nbsp;14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.
        </t>
      </section>
    </section>

    <section anchor="profile">
      <name>RPKI Signed Prefix List Profile</name>
      <t>
        RPKI Prefix List objects follow the Signed Object Template for the RPKI <xref target="RFC6488"/>.
      </t>

      <section title="EE Certificates">
        <t>
          The Certification Authority (CA) <bcp14>MUST</bcp14> sign only one PrefixList with each EE certificate and <bcp14>MUST</bcp14> generate a new key pair for each new PrefixList or PrefixList Opt-Out Listing.
          This type of EE certificate is termed a "one-time-use" EE certificate (see <xref target="RFC6487" section="3"/>).
        </t>
      </section>
      <section title="Object Filenames">
        <t>
          A guideline for naming PrefixList is that the file name chosen in the repository be a value derived from the public key of the EE certificate.
          One such method of generating a publication name is described in Section 2.1 of <xref target="RFC4387"/>; convert the 160-bit hash of a EE's public key value into a 27-character string using a modified form of Base64 encoding, with an additional modification as proposed in Section 5, table 2, of <xref target="RFC4648"/>.
        </t>
      </section>
    </section>

    <section anchor="content">
      <name>eContentType</name>
      <section>
        <name>The PrefixList eContentType</name>
        <t>
          The eContentType for an PrefixList is defined as id-ct-rpkiSignedPrefixList, with Object Identifier (OID) 1.2.840.113549.1.9.16.1.TBD.
        </t>
        <t>
          This OID <bcp14>MUST</bcp14> appear within both the eContentType in the encapContentInfo object and the ContentType signed attribute in the signerInfo object (see <xref target="RFC6488"/>).
        </t>
      </section>
    </section>

     <section anchor="econtent">
      <name>eContent</name>

      <section>
        <name>The PrefixList eContent</name>
        <t>
          The content of an PrefixList is a list of IP address prefixes and a single ASN.
          An PrefixList is formally defined as follows:
        </t>
        <sourcecode type="asn.1" src="RpkiSignedPrefixList-2023.asn"/>
        <section>
          <name>Version</name>
          <t>
            The version number of the RpkiSignedPrefixList <bcp14>MUST</bcp14> be 0.
          </t>
        </section>

        <section>
          <name>asID</name>
          <t>
            The Autonomous System Number contained here <bcp14>MUST</bcp14> be a contained within the set of AS Identifier resources listed by the EE certificate carried in the CMS certificates field.
          </t>
        </section>

        <section>
          <name>prefixList</name>
          <t>
            This field contains a SEQUENCE of AddressFamilyIPAddress.
            The AddressFamilyIPAddress elements <bcp14>MUST</bcp14> be ordered in ascending order: first by numeric value of the addressFamily field, then by value of the prefix field.
          </t>
          <section>
            <name>Element AddressFamilyIPAddress</name>
            <t>
              This field contains a SEQUENCE which contains one instance of addressFamily and one instance of prefix.
            </t>
            <section>
              <name>addressFamily</name>
              <t>
                This field contains an OCTET STRING which is either '0001'H (IPv4) or '0002'H (IPv6).
              </t>
            </section>
            <section>
              <name>prefix</name>
              <t>
                This field contains a BIT STRING, its length bounded through the addressFamily field.
                The type is a BIT STRING, see Section 2.2.3.8 of <xref target="RFC3779" /> for more information.
              </t>
            </section>
          </section>
        </section>
      </section>
    </section>

    <section anchor="validation">
      <name>PrefixList Validation</name>
      <t>
        To validate an PrefixList, the RP <bcp14>MUST</bcp14> perform all the validation checks specified in <xref target="RFC6488"/>.
        In addition, the RP <bcp14>MUST</bcp14> perform the following validation steps:
      </t>
      <ol>
        <li>
          The contents of the CMS eContent field <bcp14>MUST</bcp14> conform to all of the constraints described in <xref target="econtent"/>.
        </li>
        <li>
          The Autonomous System Identifier Delegation extension <xref target="RFC3779"/> <bcp14>MUST</bcp14> be present in the EE certificate contained in the CMS certificates field.
        </li>
        <li>
          The AS identifier present in the RpkiSignedPrefixList eContent 'asID' field <bcp14>MUST</bcp14> be a subset of the AS Identifiers present in the certificate extension.
        </li>
        <li>
          The Autonomous System Identifier Delegation extension <bcp14>MUST NOT</bcp14> contain "inherit" elements.
        </li>
        <li>
          The IP Address Delegation Extension <xref target="RFC3779"/> is not used in PrefixList, and <bcp14>MUST NOT</bcp14> be present in the EE certificate.
        </li>
      </ol>
    </section>
    <section title="Recommendations for Creation of PrefixList Object" anchor="recs">
    <!-- maxLength Consideration for PrefixList -->
      <t>
        An AS SHOULD include all prefixes it originates or intends to originate in its PrefixList. These would include prefixes it owns
        and the prefixes of BYOIP customers.
        It is understood that some of these prefixes may have ROA coverage and some may not.
      </t>
      <t>
        There appears to be no need to include a maxLength in the PrefixList object.
        The reason is as follows.
        Even if a prefix originated by an AS (whether the prefix is owned by the AS owner or BYOIP)
        has a ROA with maxLength (greater than the prefix length),
        typically only the prefix and possibly some of its subprefixes
        (i.e., subsumed more specific prefixes) are announced in BGP.
        The owner of the prefix informs the AS operator (typically via a customer interface)
        about the prefixes and subprefixes (if any) it intends to announce,
        and only those prefixes/subprefixes SHOULD be included in the PrefixList.
        Other subprefixes SHOULD NOT be included merely because
        they are permitted by the ROA or its maxLength.
        This narrows the attack surface for forged-origin subprefix hijacks
        which may be otherwise wide due to the ROA maxLength (also see <xref target="reduce"/>).
      </t>
    </section>
    <section title="Route Verification: State Space and Outcomes" anchor="outcomes">
      <t>
        The state-space for route verification considering ROV and PrefixList is enumerated in <xref target="state-space"/>.
        Also, mentioned are the combined results for each state from combining both verifications.
        A RECOMMENDED route selection policy is also mentioned in the last column of <xref target="state-space"/>.
        A network operator is free to select a policy that they consider most appropriate.
        The use of the term "route is ineligible" in this document has the same meaning as in <xref target="RFC4271"/>,
        i.e., "route is ineligible to be installed in Loc-RIB and will be excluded from the next phase of route selection".
      </t>
        <table anchor="state-space" align="center">
          <name/>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Index</th>
              <th rowspan="1" colspan="1">ROV</th>
              <th rowspan="1" colspan="1">PrefixList Verification</th>
              <th rowspan="1" colspan="1">Combined Verification</th>
              <th rowspan="1" colspan="1">Route Selection</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>1</td>
              <td>Valid</td>
              <td>Valid</td>
              <td>Valid</td>
              <td>Eligible</td>
            </tr>
            <tr>
              <td>2</td>
              <td>Valid</td>
              <td>Unknown</td>
              <td>Unknown</td>
              <td>Eligible</td>
            </tr>
            <tr>
              <td>3</td>
              <td>Valid</td>
              <td>Invalid</td>
              <td>Invalid</td>
              <td>Ineligible</td>
            </tr>
            <tr>
              <td>4</td>
              <td>Unknown</td>
              <td>Valid</td>
              <td>Unknown</td>
              <td>Eligible</td>
            </tr>
            <tr>
              <td>5</td>
              <td>Unknown</td>
              <td>Unknown</td>
              <td>Unknown</td>
              <td>Eligible</td>
            </tr>
            <tr>
              <td>6</td>
              <td>Unknown</td>
              <td>Invalid</td>
              <td>Invalid</td>
              <td>Ineligible</td>
            </tr>
            <tr>
              <td>7</td>
              <td>Invalid</td>
              <td>Valid</td>
              <td>Invalid</td>
              <td>Ineligible</td>
            </tr>
            <tr>
              <td>8</td>
              <td>Invalid</td>
              <td>Unknown</td>
              <td>Invalid</td>
              <td>Ineligible</td>
            </tr>
            <tr>
              <td>9</td>
              <td>Invalid</td>
              <td>Invalid</td>
              <td>Invalid</td>
              <td>Ineligible</td>
            </tr>
          </tbody>
        </table>
    </section>
    <section title="Problems Solved by PrefixList" anchor="problems">
      <t>
        There are four types of security vulnerabilities in BGP that the PrefixList object helps solve.
        These are described below.
      </t>
      <section title="AS Abuse While Hijacking an ROV-Unknown Prefix" anchor="abuse1">
        <t>
        If AS A creates a PrefixList, it is protected in case an offending AS X inserts AS A
        as the origin AS and hijacks a third-party prefix not covered by a ROA.
        The route will be ROV-Unknown and PrefixList Invalid and hence
        considered ineligible by an RP (see #6 in <xref target="state-space"/>).
        Thus, AS A protects itself from this form of AS abuse.
        </t>
      </section>
      <section title="AS Abuse Together with a Bogus ROA" anchor="abuse2">
        <t>
        If AS A creates a PrefixList, it is protected in case an offending AS X inserts AS A
        as the origin AS and announces a prefix for which AS X has an RPKI certificate
        and a bogus ROA showing AS A as the origin.
        The route will be ROV-Valid due to the bogus ROA but PrefixList Invalid
        and hence considered ineligible by an RP (see #3 in <xref target="state-space"/>).
        Thus, AS A protects itself from this second form of AS abuse as well.
        </t>
      </section>
      <section title="AS Accidentally Strips AS_PATH and Mis-Originates Prefixes" anchor="abuse3">
        <t>
        A multihomed AS learns a route from an eBGP neighbor and announces the prefix to
        another eBGP neighbor as if it is being originated by it (i.e., strips the received
        AS_PATH and re-originates the prefix). This can be called re-origination or mis-origination
        (also see Type 5 route leak in <xref target="RFC7908"/>).
        This attack has been seen to happen in practice due to malfunctioning route optimizers.
        If the affected prefixes have ROA coverage, then ROV at a subsequent AS would detect this anomaly.
        However, if the affected prefixes do not have ROA coverage, then these prefixes
        will be ROV-Unknown and PrefixList Invalid and considered Invalid by an RP
        (per #6 in <xref target="state-space"/>) provided that the leaking AS has registered a PrefixList.
        Thus, a leaking AS protects itself in the sense that when the leaks (mis-originations) reach
        a neighbor AS that is doing PrefixList based verification, they will be detected and blocked
        from further propagation.
        </t>
      </section>
      <section title="Attack Surface Reduction" anchor="reduce">
        <t>
        Often a prefix owner includes more prefixes and/or more more-specific prefixes (using maxLength or otherwise)
        in their ROA but has no plans to announce some or many of them.
        Due to this, they tend to create a larger attack surface for forged-origin prefix and/or subprefix hijacks.
        However, they would notify the operator of the AS serving them for origination purposes
        about the prefixes they do intend to announce, and the AS operator would include
        only those prefixes in the AS's PrefixList (see <xref target="do-not-copy-roa"/>).
        This helps to reduce the attack surface for the forged-origin hijacks (per #3 in <xref target="state-space"/>).
        </t>
      </section>
    </section>
    <section>
      <name>Operational Considerations</name>
      <t>
        Multiple valid PrefixList objects could exist which contain the same asID.
        In such cases the union of address prefix members forms the complete set of members.
        It is highly <bcp14>RECOMMENDED</bcp14> that a compliant CA maintains a single PrefixList for a given asID.
      </t>
      <t>
        If an AS holder publishes a PrefixList(s), then relying parties SHOULD assume that the list is complete
        for that originating AS, and the presence of any route with the same AS as the originating AS
        and an address prefix that is not included in the Prefix List implies that the route has been propagated
        within the routing system without the permission of the originating AS (see #3 and #6 in <xref target="state-space"/>).
      </t>
      <t>
        The construction of an 'allowlist' for a given EBGP session using RPKI PrefixList(s) compliments
        best practices <xref target="RFC7454"/> and rejecting RPKI-invalid BGP route announcements <xref target="RFC6811"/>.
        In other words, if a given BGP route is covered by a RPKI PrefixList, but also is "Invalid"
        from a Route Origin Validation perspective, it is RECOMMENDED to consider the route
        announcement ineligible (see #7 in <xref target="state-space"/>).
      </t>
      <section title="Considerations when Prefix Owner Splits a Prefix" anchor="split-prefix">
        <t>
        A prefix owner with a prefix listed in the PrefixList of an AS may one day decide to split its prefix
        and announce only a more specific prefix (subsumed under the prefix) from the AS in consideration.
        This operation needs to be managed gracefully applying the make-before-break principle.
        When notified of the intent, the AS would update its PrefixList to reflect the change.
        However, the updated PrefixList would take some time to propagate to the RPs.
        So, the AS would continue to announce the original prefix as well as the more-specific
        prefix for the period of time necessary for the propagation of the updated PrefixList.
        The period of time may be based on a measure of the propagation time such as
        its anticipated 95th-percentile value.
        The prefix owner is kept informed of the resulting wait times.
        </t>
      </section>
      <section title="Considerations when Prefix Owner Has a New Prefix" anchor="new-prefix">
        <t>
        A prefix owner with a prefix listed in the PrefixList of an AS may one day obtain a new prefix
        and request the AS operator to announce it.
        The AS operator would recommend to the prefix owner to create a ROA for the new prefix if not already done.
        The prefix owner may or may not be RPKI capable.
        In any case, the AS operator would update its PrefixList to add the new prefix.
        The prefix owner may expect the new prefix to be announced shortly after making the request.
        However, the updated PrefixList would take some time to propagate to the RPs.
        The operator needs to apply the make-before-break principle.
        The AS operator would delay the announcemnt of the new prefix for a period of time necessary
        for the propagation of the updated PrefixList.
        The period of time may be based on a measure of the propagation time such as
        its anticipated 95th-percentile value.
        The prefix owner is kept informed of the resulting wait times.
        </t>
      </section>
      <section title="Why are ROA Prefixes not Simply Copied into PrefixList?" anchor="do-not-copy-roa">
      <t>
        It may be argued that including everything from any applicable ROA
        (including the optional maxLength if it exists) in the PrefixList object
        makes the PrefixList more effective.
        One may reason that if the prefix owner decides at a future date to announce (from the AS in consideration)
        more specific prefixes permitted by the ROA, the PrefixList would be ready for it a priori.
        However, by doing so, the benefit of a pragmatic PrefixList, i.e., reducing
        the attack surface for potential subprefix hijacks, is lost.
        So, there is a trade-off and it appears better to opt for not copying prefixes from ROA
        into the PrefixList and not including an optional maxLength in the PrefixList.
        Instead, the AS operator SHOULD include in the PrefixList only the prefixes requested by the prefix owners
        for origination (typically via a customer interface).
        This helps preserve the benefit of reduced attack surface for forged origin hijacks.
        If a prefix owner wishes readiness for future instantaneous announcement of some split prefixes
        under some circumstances, they can include them in their ROA a priori,
        and simultaneously inform the AS operator to include them in the PrefixList as well.
      </t>
      </section>
    </section>

    <section anchor="security">
      <name>Security Considerations</name>
      <t>
        Relying Parties are warned that the data in an PrefixList is self-asserted by the AS holder.
        There is no implied authority from any IP prefix holder that grants the AS permission to originate a route for any prefixes.
        Such an authority is separately conveyed in the RPKI as a ROA.
      </t>
      <t>
        While a one-time-use EE certificate must only be used to generate and sign a single PrefixList object, CAs technically are not restricted from generating and signing multiple different PrefixList objects with a single key pair.
        Any PrefixList objects sharing the same EE certificate cannot be revoked individually.
      </t>
    </section>

    <section anchor="iana">
      <name>IANA Considerations</name>

      <section>
        <name>SMI Security for S/MIME CMS Content Type (1.2.840.113549.1.9.16.1)</name>
        <t>
          IANA is requested to allocat the following in the "SMI Security for S/MIME CMS Content Type (1.2.840.113549.1.9.16.1)" registry:
        </t>

        <table anchor="cms-content-type" align="center">
          <name></name>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Decimal</th>
              <th rowspan="1" colspan="1">Description</th>
              <th rowspan="1" colspan="1">References</th>
            </tr>
            </thead>
            <tbody>
              <tr>
                <td>TBD</td>
                <td>id-ct-rpkiSignedPrefixList</td>
                <td>draft-spaghetti-sidrops-rpki-prefixlist</td>
              </tr>
            </tbody>
        </table>
      </section>

      <section>
        <name>RPKI Signed Objects</name>
        <t>
          IANA is requested to register two OIDs in the "RPKI Signed Objects" registry <xref target="RFC6488"/> as follows:
        </t>

        <table anchor="rpki-signed-prefixlist" align="center">
          <name></name>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Name</th>
              <th rowspan="1" colspan="1">OID</th>
              <th rowspan="1" colspan="1">Reference</th>
            </tr>
        </thead>
          <tbody>
            <tr>
              <td>Signed PrefixList</td>
              <td>1.2.840.113549.1.9.16.1.TBD</td>
              <td>draft-spaghetti-sidrops-rpki-prefixlist</td>
            </tr>
          </tbody>
        </table>
      </section>

      <section>
        <name>RPKI Repository Name Schemes</name>
        <t>
          IANA is requested to add the Signed PrefixList file extension to the "RPKI Repository Name Schemes" registry <xref target="RFC6481"/> as follows:
        </t>

        <table anchor="rpki-repository-name-schemes" align="center">
          <name></name>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Filename Extension</th>
              <th rowspan="1" colspan="1">RPKI Object</th>
              <th rowspan="1" colspan="1">Reference</th>
            </tr>
        </thead>
          <tbody>
            <tr>
              <td>.pfx</td>
              <td>Signed PrefixList</td>
              <td>draft-spaghetti-sidrops-rpki-prefixlist</td>
            </tr>
          </tbody>
        </table>
      </section>

      <section>
        <name>SMI Security for S/MIME Module Identifier (1.2.840.113549.1.9.16.0)</name>
        <t>
          IANA is requested to allocate the following in the "SMI Security for S/MIME Module Identifier (1.2.840.113549.1.9.16.0)" registry:
        </t>

        <table anchor="smi-security-identifier" align="center">
          <name></name>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Decimal</th>
              <th rowspan="1" colspan="1">Description</th>
              <th rowspan="1" colspan="1">References</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>TBD</td>
              <td>id-mod-rpkiSignedPrefixList-2023</td>
              <td>draft-spaghetti-sidrops-rpki-prefixlist</td>
            </tr>
          </tbody>
        </table>
      </section>

      <section>
        <name>Media Types</name>
        <t>
          IANA is requested to register the media type "application/rpki-prefixlist" in the "Media Types" registry as follows:
        </t>
        <section>
        <name>PrefixList Media Type</name>
        <dl spacing="compact">
           <dt>Type name:</dt><dd>application</dd>
           <dt>Subtype name:</dt><dd>rpki-prefixlist</dd>
           <dt>Required parameters:</dt><dd>N/A</dd>
           <dt>Optional parameters:</dt><dd>N/A</dd>
           <dt>Encoding considerations:</dt><dd>binary</dd>
           <dt>Security considerations:</dt><dd>Carries an RPKI Signed PrefixList. This media type contains no active content. See <xref target="validation"/> of draft-spaghetti-sidrops-rpki-prefixlist for further information.</dd>
           <dt>Interoperability considerations:</dt><dd>N/A</dd>
           <dt>Published specification:</dt><dd>draft-spaghetti-sidrops-rpki-prefixlist</dd>
           <dt>Applications that use this media type:</dt><dd>RPKI operators</dd>
           <dt>Fragment identifier considerations:</dt><dd>N/A</dd>
           <dt>Additional information:</dt>
           <dd>
           <dl spacing="compact">
             <dt><br/></dt><dd/>
             <dt>Content:</dt><dd>This media type is a signed object, as defined in [RFC6488], which contains a payload of a list of checksums as defined in draft-spaghetti-sidrops-rpki-prefixlist.</dd>
             <dt>Magic number(s):</dt><dd>N/A</dd>
             <dt>File extension(s):</dt><dd>.pfx</dd>
             <dt>Macintosh file type code(s):</dt><dd>N/A</dd>
           </dl>
           </dd>
           <dt>Person &amp; email address to contact for further information:</dt><dd>Job Snijders (job@fastly.com)</dd>
           <dt>Intended usage:</dt><dd>COMMON</dd>
           <dt>Restrictions on usage:</dt><dd>N/A</dd>
           <dt>Author:</dt><dd>Job Snijders (job@fastly.com)</dd>
           <dt>Change controller:</dt><dd>IETF</dd>
        </dl>
        </section>
      </section>
    </section>
  </middle>

  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>

          <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
          <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2622.xml"/>
          <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3779.xml"/>
          <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5652.xml"/>
          <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6481.xml"/>
          <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6487.xml"/>
          <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6488.xml"/>
          <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      </references>

      <references>
        <name>Informative References</name>

       <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4271.xml"/>
       <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4387.xml"/>
       <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"/>
       <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6268.xml"/>
       <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6811.xml"/>
       <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7454.xml"/>
       <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7908.xml"/>
      </references>
    </references>

    <section anchor="acknowledgements">
      <name>Acknowledgements</name>
      <t>
        The authors wish to thank
        <contact fullname="Russ Housley"/>
        for feedback.
      </t>
    </section>

    <section>
      <name>Example payloads</name>

    <section anchor="example-prefixlist">
      <name>Example PrefixList eContent Payload</name>
      <t>
        Below an example of a DER encoded PrefixList eContent is provided with annotation following the '#' character.
      </t>
      <artwork>
<![CDATA[
$ cat << EOF | xxd -r -ps | openssl asn1parse -inform DER -i -dump
3081a202023cca30819b306d04020001306703040043ddf5030400a5fee1
030506a5feff00030400c093a8030400c22047030400c63a03030401cc02
1e030400d11800030400d11801030407d11880030404d11810030400d118
03030405d11820030402d11804030406d11840030403d11808030400d118
08302a04020002302403070120010418144e0307002001067c208c030700
200107fbfd040307002607fae00245
EOF
    0:d=0  hl=3 l= 153 cons: SEQUENCE
    3:d=1  hl=2 l=   2 prim:  INTEGER        :3CCA # AS 15562
    7:d=1  hl=3 l= 146 cons:  SEQUENCE
   10:d=2  hl=2 l= 109 cons:   SEQUENCE
   12:d=3  hl=2 l=   2 prim:    OCTET STRING
      0000 - 00 01                              .. # IPv4 AFI
   16:d=3  hl=2 l= 103 cons:    SEQUENCE
   18:d=4  hl=2 l=   4 prim:     BIT STRING
      0000 - 00 43 dd f5                      .C.. # 67.221.245.0/24
   24:d=4  hl=2 l=   4 prim:     BIT STRING
      0000 - 00 a5 fe e1                      .... # 165.254.225.0/24
   30:d=4  hl=2 l=   5 prim:     BIT STRING
      0000 - 06 a5 fe ff                      .... # 165.254.255.0/26
      0005 - <SPACES/NULS>
... snip ...
  121:d=2  hl=2 l=  33 cons:   SEQUENCE
  123:d=3  hl=2 l=   2 prim:    OCTET STRING
      0000 - 00 02                            ..
  127:d=3  hl=2 l=  27 cons:    SEQUENCE
  129:d=4  hl=2 l=   7 prim:     BIT STRING
      0000 - 01 20 01 04 18 14 4e             . ....N # 2001:418:144e::/47
  138:d=4  hl=2 l=   7 prim:     BIT STRING
      0000 - 00 20 01 06 7c 20 8c             . ..| . # 2001:67c:208c::/48
  147:d=4  hl=2 l=   7 prim:     BIT STRING
      0000 - 00 20 01 07 fb fd 04             . ..... # 2001:7fb:fd04::/48
  156:d=4  hl=2 l=   7 prim:     BIT STRING
      0000 - 00 26 07 fa e0 02 45             .&....E # 2607:fae0:245::/48
]]>
      </artwork>

    </section>

    </section>

    <section removeInRFC="true">
      <name>Implementation status</name>
      <t>
        This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in RFC 7942.
        The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs.
        Please note that the listing of any individual implementation here does not imply endorsement by the IETF.
        Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors.
        This is not intended as, and must not be construed to be, a catalog of available implementations or their features.
        Readers are advised to note that other implementations may exist.
      </t>
      <t>
        According to RFC 7942, "this will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature.
        It is up to the individual working groups to use this information as they see fit".
      </t>

      <ul>
        <li>
          Example .pfx files were created by Job Snijders with the use of asn1c and OpenSSL.
        </li>
      </ul>

    </section>

  </back>

</rfc>

